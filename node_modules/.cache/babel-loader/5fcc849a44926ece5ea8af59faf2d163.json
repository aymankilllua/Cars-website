{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Shiko\\\\Desktop\\\\store for cars\\\\code\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shiko\\\\Desktop\\\\store for cars\\\\code\\\\react\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { useSpring, animated } from 'react-spring/renderprops';\n\nclass App extends Component {\n  render() {\n    const _useSpring = useSpring(() => ({\n      opacity: 1\n    })),\n          _useSpring2 = _slicedToArray(_useSpring, 3),\n          props = _useSpring2[0],\n          set = _useSpring2[1],\n          stop = _useSpring2[2]; // Update spring with new props\n\n\n    set({\n      opacity: toggle ? 1 : 0\n    }); // Stop animation\n\n    stop();\n    return React.createElement(animated.div, {\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"i will fade\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Shiko\\Desktop\\store for cars\\code\\react\\src\\App.js"],"names":["React","Component","useSpring","animated","App","render","opacity","props","set","stop","toggle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,SAAR,EAAoBC,QAApB,QAAmC,0BAAnC;;AAOA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAQ1BI,EAAAA,MAAM,GAAE;AAAA,uBACqBH,SAAS,CAAC,OAAO;AAACI,MAAAA,OAAO,EAAE;AAAV,KAAP,CAAD,CAD9B;AAAA;AAAA,UACCC,KADD;AAAA,UACQC,GADR;AAAA,UACaC,IADb,mBAGN;;;AACAD,IAAAA,GAAG,CAAC;AAACF,MAAAA,OAAO,EAAEI,MAAM,GAAG,CAAH,GAAO;AAAvB,KAAD,CAAH,CAJM,CAKN;;AACAD,IAAAA,IAAI;AAOJ,WAGG,oBAAC,QAAD,CAAU,GAAV;AAAc,MAAA,KAAK,EAAEF,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHH;AAMD;;AA3ByB;;AA8B5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {useSpring , animated} from 'react-spring/renderprops'\n\n\n\n\n\n\nclass App extends Component {\n\n  \n \n \n \n  \n\n  render(){\n    const [props, set, stop] = useSpring(() => ({opacity: 1}))\n\n    // Update spring with new props\n    set({opacity: toggle ? 1 : 0})\n    // Stop animation\n    stop()\n\n   \n   \n    \n\n      \n    return(\n      \n      \n       <animated.div style={props}>i will fade</animated.div>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}